{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cloudformation Chef Analytics Standalone Sever v1.2",
  "Parameters": {
    "InstanceType": {
      "Type": "String",
      "Default": ""
    },
    "ImageId": {
      "Type": "String",
      "Default": ""
    },
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String"
    },
    "SSHSecurityGroup" : {
      "Description" : "Select Security Group for SSH Access",
      "Type": "String",
      "Default": ""
    },
    "IAMRole": {
      "Description" : "Enter IAM Role name",
      "Type" : "String",
      "Default": ""
    },
    "IAMProfile": {
      "Description" : "Enter IAM Role name",
      "Type" : "String",
      "Default": ""
    },
    "VPC": {
      "Description" : "Choose VPC to use",
      "Type" : "String",
      "Default": ""
    },
    "Subnet": {
      "Description" : "Choose Subnet",
      "Type" : "String",
      "Default": ""
    },
    "AnalyticsENI": {
      "Description" : "Choose ENI to use",
      "Type" : "String",
      "Default": ""
    },
    "AccessKey": {
      "Description" : "Enter User Access Key",
      "Type" : "String",
      "Default": ""
    },
    "SecretKey": {
      "Description" : "Enter User Secret Key",
      "Type" : "String",
      "Default": ""
    },
    "VIP": {
      "Description" : "Enter VIP",
      "Type" : "String",
      "Default": ""
    },
    "VIPInternalDNS": {
      "Description" : "Enter VIP DNS",
      "Type" : "String",
      "Default": ""
    },
    "PrimaryIP": {
      "Description" : "Enter Private IP",
      "Type" : "String",
      "Default": ""
    },
    "PrimaryInternalDNS": {
      "Description" : "Enter Private DNS",
      "Type" : "String",
      "Default": ""
    },
    "FailoverIP": {
      "Description" : "Enter Private IP",
      "Type" : "String",
      "Default": ""
    },
    "FailoverInternalDNS": {
      "Description" : "Enter Private DNS",
      "Type" : "String",
      "Default": ""
    },
    "FE01DNS": {
      "Description" : "Enter Frontend01 DNS",
      "Type" : "String",
      "Default": ""
    },
    "FE02DNS": {
      "Description" : "Enter Frontend02 DNS",
      "Type" : "String",
      "Default": ""
    },
    "FE01IP": {
      "Description" : "Enter Frontend01 IP",
      "Type" : "String",
      "Default": ""
    },
    "FE02IP": {
      "Description" : "Enter Frontend02 IP",
      "Type" : "String",
      "Default": ""
    },
    "HostedZone": {
      "Type": "String",
      "Default": "",
      "ConstraintDescription": "must match a route53 hosted domain/zone"
    },
    "HostedSubdomain": {
      "Type": "String",
      "Default": "",
      "ConstraintDescription": "subdomain/prefix for chose hosted zone"
    },
    "BackendEBSID": {
      "Description" : "Choose Subnet",
      "Type" : "String",
      "Default": ""
    },
    "Bucket": {
      "Type": "String",
      "Default": "",
      "Description": "Enter S3 bucket name for chef backups & primary backened generated items"
    },
    "ChefDir": {
        "Type": "String",
        "Default": "",
        "Description": "Path to mount S3 Bucket to (created during CFN run)"
    },
    "S3Dir": {
        "Type": "String",
        "Default": "",
        "Description": "Path to mount S3 Bucket to (created during CFN run)"
    },
    "Cookbook": {
        "Type": "String",
        "Default": "",
        "Description": "Cookbook Name"
    },
    "CookbookGit": {
        "Type": "String",
        "Default": "",
        "Description": "Git Clone URI for Cookbook"
    },
    "CookbookGitBranch": {
        "Type": "String",
        "Default": "",
        "Description": "Git Clone Branch"
    },
    "RestoreFile": {
      "Type": "String",
      "Default": "",
      "Description": "Enter Filename to restore backup from in backup bucket (Optional)"
    },
    "SignupDisable": {
      "Type": "String",
      "Default": "",
      "Description": "Enter True/False for signup disable (false by default)"
    },
    "SupportEmail": {
      "Type": "String",
      "Default": "",
      "Description": "Enter Support Email for Chef Server (Optional)"
    },
    "MailHost": {
      "Type": "String",
      "Default": "",
      "Description": "Enter Mail Host (Optional)"
    },
    "MailPort": {
      "Type": "String",
      "Default": "",
      "Description": "Enter Port for Mail Host (Optional)"
    },
    "LicenseCount": {
      "Type": "String",
      "Default": "",
      "Description": "Enter how many licenses you have purchased"
    },
    "EBSMountPath": {
      "Type": "String",
      "Default": "",
      "Description": "Enter EC2 Mount Point for Backend EBS Device"
    },
    "UserDataScript": {
      "Type": "String",
      "Default": "",
      "ConstraintDescription": "URL for userdata script"
    },
    "BackupEnable": {
      "Type": "String",
      "Default": "",
      "Description": "Select True/False if you wanted to enable backups"
    },
    "AnalyticsSubdomain": {
      "Type": "String",
      "Default": "",
      "ConstraintDescription": "subdomain/prefix for chose hosted zone"
    },
    "AnalyticsInternalDNS": {
      "Description" : "Enter Private DNS",
      "Type" : "String",
      "Default": ""
    },
    "AnalyticsDNS": {
      "Description" : "Enter Private DNS",
      "Type" : "String",
      "Default": ""
    },
    "AnalyticsIP": {
      "Description" : "Enter Private IP",
      "Type" : "String",
      "Default": ""
    }
},

"Resources": {
  "AnalyticsEC2Instance": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
      "IamInstanceProfile": { "Ref": "IAMProfile" },
      "DisableApiTermination": "false",
      "InstanceInitiatedShutdownBehavior": "stop",
      "InstanceType": {"Ref": "InstanceType"},
      "ImageId" : {"Ref": "ImageId"},
      "KeyName": {"Ref": "KeyName"},
      "Tags": [ {"Key": "Name", "Value": "Chef-Analytics"}],
      "NetworkInterfaces" : [ {"NetworkInterfaceId" : {"Ref" : "AnalyticsENI"}, "DeviceIndex" : 0 } ],
      "BlockDeviceMappings": [
        {
          "DeviceName": "/dev/sda1",
          "Ebs": {
            "VolumeType": "standard",
            "DeleteOnTermination": "true",
            "VolumeSize": "15"
          }
        }
      ],
      "UserData": {
        "Fn::Base64" : { "Fn::Join" : ["", [
              "#!/bin/bash -xev\n",
              "apt-get update && apt-get -y upgrade \n",
              "apt-get install -y wget curl python-setuptools python-pip git\n",
              "# Helper function to set wait timer\n",
              "function error_exit\n",
              "{\n",
              "  /usr/local/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
              "  exit 1\n",
              "}\n",
              "export -f error_exit\n",
              "curl -Sl ", { "Ref" : "UserDataScript" }," -o /tmp/userdata.sh\n",
              "chmod +x /tmp/userdata.sh \n",
              "export REGION='", {"Ref" : "AWS::Region" } ,"'\n",
              "export IAM_ROLE='", {"Ref" : "IAMRole" } ,"'\n",
              "export ENI='", {"Ref" : "AnalyticsENI" } ,"'\n",
              "export VIP='", {"Ref" : "VIP" } ,"'\n",
              "export DNS='", {"Ref" : "AnalyticsDNS" } ,"'\n",
              "export PRIMARY_DNS='", {"Ref" : "PrimaryInternalDNS" } ,"'\n",
              "export PRIMARY_IP='", {"Ref" : "PrimaryIP" } ,"'\n",
              "export FAIL_DNS='", {"Ref" : "FailoverInternalDNS" } ,"'\n",
              "export FAIL_IP='", {"Ref" : "FailoverIP" } ,"'\n",
              "export VIP_DNS='", {"Ref" : "VIPInternalDNS" } ,"'\n",
              "export FE01_DNS='", {"Ref" : "FE01DNS" } ,"'\n",
              "export FE01_IP='", {"Ref" : "FE01IP" } ,"'\n",
              "export FE02_DNS='", {"Ref" : "FE02DNS" } ,"'\n",
              "export FE02_IP='", {"Ref" : "FE02IP" } ,"'\n",
              "export DOMAIN='", {"Ref": "HostedZone"} ,"'\n",
              "export SUBDOMAIN='", {"Ref": "HostedSubdomain"} ,"'\n",
              "export EBS_ID='", {"Ref" : "BackendEBSID" } ,"'\n",
              "export EBS_MOUNT_PATH='", {"Ref" : "EBSMountPath" } ,"'\n",
              "export BUCKET='", {"Ref" : "Bucket" } ,"'\n",
              "export BACKUP_ENABLE='", {"Ref" : "BackupEnable" } ,"'\n",
              "export RESTORE_FILE='", {"Ref" : "RestoreFile" } ,"'\n",
              "export CHEFDIR='", {"Ref" : "ChefDir" } ,"'\n",
              "export COOKBOOK='", {"Ref" : "Cookbook" } ,"'\n",
              "export COOKBOOK_GIT='", {"Ref" : "CookbookGit" } ,"'\n",
              "export COOKBOOK_BRANCH='", {"Ref" : "CookbookGitBranch" } ,"'\n",
              "export SIGNUP_DISABLE='", {"Ref" : "SignupDisable" } ,"'\n",
              "export S3DIR='", {"Ref" : "S3Dir" } ,"'\n",
              "export SUPPORT_EMAIL='", {"Ref" : "SupportEmail" } ,"'\n",
              "export MAIL_HOST='", {"Ref" : "MailHost" } ,"'\n",
              "export MAIL_PORT='", {"Ref" : "MailPort" } ,"'\n",
              "export LICENSE_COUNT='", {"Ref" : "LicenseCount" } ,"'\n",
              "export ANALYTICS_SUBDOMAIN='", {"Ref": "AnalyticsSubdomain"} ,"'\n",
              "export ANALYTICS_DNS='", {"Ref" : "AnalyticsDNS" } ,"'\n",
              "export ANALYTICS_IP='", {"Ref" : "AnalyticsIP" } ,"'\n",
              "export ROLE='analytics' \n",
              "/tmp/userdata.sh\n",
              "# All is well so signal success and let CF know wait function is complete\n",
              "/usr/local/bin/cfn-signal -e 0 -r \"Server setup complete\" '", { "Ref" : "WaitHandle" }, "'\n",
              "rm -f /tmp/userdata.sh"
            ]
          ]
        }
      }
    }
  },
  "AnalyticsEIP": {
    "Type": "AWS::EC2::EIP",
    "Properties": {
      "InstanceId": {
        "Ref": "AnalyticsEC2Instance"
      },
      "Domain": "vpc"
    }
  },
  "ExternalDNS": {
    "Type": "AWS::Route53::RecordSet",
    "Properties": {
      "HostedZoneName": {"Fn::Join" : [ "",[{"Ref" : "HostedZone"} ,"." ] ]},
      "Comment": "DNS name for Analytics Instance.",
      "Name": {
        "Fn::Join": ["",[{"Ref": "AnalyticsSubdomain"},".",{"Ref": "HostedZone"}]]},
      "Type": "A",
      "TTL": "60",
      "ResourceRecords": [
        {
          "Ref": "AnalyticsEIP"
        }
      ]
    }
  },
   "WaitHandle" : {
     "Type" : "AWS::CloudFormation::WaitConditionHandle"
   },
   "WaitCondition" : {
     "Type" : "AWS::CloudFormation::WaitCondition",
     "DependsOn" : "AnalyticsEC2Instance",
     "Properties" : {
         "Handle" : { "Ref" : "WaitHandle" },
         "Timeout" : "1600"
       }
    }
  },
  "Outputs": {
    "AnalyticsEIP": {
      "Description": "EIP for Analytics Instace.",
      "Value": {
        "Ref": "AnalyticsEIP"
      }
    },
    "AnalyticsURL": {
      "Description": "Analytics URL/Route53 Endpoint.",
      "Value": {
        "Ref": "ExternalDNS"
      }
    }
  }
}
